# This is a basic workflow to help you get started with Actions

name: EC2-deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
    # pull_request:
    #   branches: [ "master" ]
    paths:
      - "Ias-aws/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runScope:
        type: choice
        description: "Select the workflow to run"
        options:
          - "Ias-aws"
        default: "Ias-aws"
        required: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup-keypairs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up aws ec2 keypairs
        run: |
          echo "${{ secrets.AWS_EC2_PEM }}" | base64 -d > openvpn.pem
          chmod 600 openvpn.pem
          pwd openvpn.pem
          echo "Value of a2: $AWS_REGION"
        # env:
          # AWS_EC2_PEM: ${{ secrets.AWS_EC2_PEM }}
      - uses: actions/upload-artifact@v2
        with:
          name: openvpn-key
          path: openvpn.pem


  # deploy-ias-aws:
  #   runs-on: ubuntu-latest
  #   needs: setup-keypairs
  #   # if: github.event_name == 'push' && github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, 'Ias-aws') || github.event.inputs.runScope == 'Ias-aws'
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event.inputs.runScope == 'Ias-aws'
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: download openvpn pem
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: openvpn-key

  #     - name: Config aws credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         role-to-assume: arn:aws:iam::724193151683:role/openvpn_github
  #         aws-region: ap-southeast-1

  #     - name: Deploy cfn stack
  #       run: |
  #         aws cloudformation deploy \
  #         --template-file Ias-aws/ec2-openvpn-ami.yml \
  #         --stack-name openvpn-yd \
  #         --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM

  #     - name: Retrieve Elastic IP
  #       run: |
  #         EIP_ADDRESS=$(aws cloudformation describe-stacks --stack-name openvpn-yd --query "Stacks[0].Outputs[?OutputKey=='ElasticIPAddress'].OutputValue" --output text)
  #         FORMATTED_EIP_ADDRESS=$(echo $EIP_ADDRESS | tr '.' '-')
  #         echo "FORMATTED_EIP_ADDRESS=$FORMATTED_EIP_ADDRESS" >> $GITHUB_ENV
  #         echo "Elastic IP Address is $FORMATTED_EIP_ADDRESS"

  #     - name: Openvpn infrastructure initialization
  #       run: |
  #         sudo apt-get update && sudo apt-get install -y expect
  #         ./Ias-aws/instance-initilisation.sh
